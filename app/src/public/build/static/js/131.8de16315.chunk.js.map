{"version":3,"file":"static/js/131.8de16315.chunk.js","mappings":"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","sources":["components/headerUser.js","routes/Register.js"],"sourcesContent":["import \"../style/headerUser.css\";\r\n\r\nfunction HeaderUser() {\r\n  \r\n  return (\r\n    <div className=\"header-user\">\r\n      <span className=\"header-user-name\">name</span>\r\n      <span className=\"header-user-icon\"></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderUser;\r\n","import { useRef, useState } from \"react\";\nimport \"../style/Register.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport HeaderUser from \"../components/headerUser\";\n\nfunction Register( {value, onHandleData} ) {\n  const navigate = useNavigate();\n  // 받아올 환자 정보\n  const [personInfo, setPersonInfo] = useState({\n    Patient_nm: \"\",\n    Patient_cd: \"a\",\n    Region: \"\",\n    Hospital: \"\",\n    Sex: \"\",\n    Age: 1,\n    Birth_dt: \"\",\n    Height: 1,\n    Weight: 1,\n    Participants: \"\",\n    Memo: \"\",\n  });\n  // 업로드할 파일 정보\n  const [files, setFiles] = useState([]);\n  const fileInputRef = useRef(null);\n  // 성별 변수\n  const gender = [\n    { value: \"male\", name: \"male\" },\n    { value: \"female\", name: \"female\" },\n  ];\n\n  // 입력한 메모 값 저장\n  function onMemo(e) {\n    setPersonInfo({\n      ...personInfo,\n      Memo: e.target.value,\n    });\n  }\n\n  // 환자정보 입력한 값 저장\n  function onText(e) {\n    const title = e.target.parentElement.children[0].innerText;\n    if (title === \"Age\" || title === \"Height\" || title === \"Weight\") {\n      const value = Number(e.target.value);\n      setPersonInfo({\n        ...personInfo,\n        [title]: value,\n      });\n    } else {\n     const value = e.target.value;\n     setPersonInfo({\n      ...personInfo,\n      [title]: value,\n    });\n    }\n  }\n\n  // 환자 성별 저장 함수\n  let history = \"\"; // 클릭한 값의 아이디저장 변수\n  let childArray = []; // child의 배열인식을 위한 새로운 변수에 저장 용도\n  function onContent(e) {\n    setPersonInfo({\n      ...personInfo,\n      Sex: e.target.textContent,\n    });\n    // 다른 칸 클릭 시 모두 지우고 아래에서 다시 설치\n    if (history !== e.target.textContent) {\n      const child = e.target.parentElement.parentElement.children[1].children;\n      for (let i = 0; i < 2; i++) {\n        childArray[i] = child[i];\n        child[i].style.backgroundColor = \"\";\n      }\n    }\n    // 클릭 색상 변경\n    if (e.target.style.backgroundColor !== \"\") {\n      e.target.style.backgroundColor = \"\";\n      history = \"\";\n    } else {\n      e.target.style.backgroundColor = \"rgba(189, 189, 189, 0.62)\";\n      history = e.target.textContent;\n    }\n  }\n\n  // 환자 이름 저장 함수\n  function onPatientNM(e) {\n    setPersonInfo({\n      ...personInfo,\n      Patient_nm: e.target.value,\n    });\n  }\n  // 환자 코드 저장 함수\n  function onPatientCD(e) {\n    setPersonInfo({\n      ...personInfo,\n      Patient_cd: e.target.value,\n    });\n  }\n\n  // 정보 데이터 베이스에 저장하는 함수\n  async function saveInfo(personInfo) {\n    try{\n      const response = await fetch('/api/patient/add', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(personInfo),\n      });\n      // 연결 성공 유무 판단\n      if (response.ok) {\n        const res = await response.json();\n        if (!res.success) {\n          alert(res.msg);\n        }\n      } else {\n        throw Error(\"서버 응답 실패\");\n      }\n    } catch (err) {\n      console.error(Error('오류'));\n    }\n  };\n\n  // 파일 업로드시 보여지는 함수\n  function onSelectFile(e) {\n    let check = \"none\";\n    if (files.length !== 0 && e.target.files !== \"\") {\n      for (let i = 0; i < files.length; i++) {\n        if (e.target.files[0].name === files[i].name) {\n          check = \"exist\";\n          break ;\n        }\n      }\n    }\n    // 중복이 없을때만 state에 저장\n    if (check === \"none\") {\n      setFiles([\n        ...files,\n        e.target.files[0],\n      ]);\n    }\n  }\n  // 올린 파일 지우는 함수 \n  function onFileDelete(e) {\n    const newFiles = files.filter((file) => file.name !== e.target.parentElement.children[0].innerText);\n    setFiles(newFiles);\n\n    // 파일 입력값 초기화\n    if (fileInputRef.current) {\n      fileInputRef.current.value = \"\";\n    }\n  }\n\n  // 파일정보 데이터 베이스에 저장하는 함수\n  async function saveFile(e) {\n    const formData = new FormData();\n    // formData에 저장\n    for (let i = 0; i < files.length; i++) {\n      formData.append(\"file\", files[i]);\n    }\n    formData.append(\"Patient_cd\", personInfo.Patient_cd);\n    // api연결\n    try{\n      const response = await fetch('/api/dicom/upload', {\n        method: \"POST\",\n        header: {\n          charset: \"UTF-8\",\n        },\n        body: formData,\n      });\n      // 연결 성공 유무 판단\n      if (response.ok) {\n        const res = await response.json();\n        if (!res.success) {\n          alert(res.msg);\n        }\n      } else {\n        throw Error(\"서버 응답 실패\");\n      }\n    } catch (err) {\n      console.error(Error('오류'));\n    }\n  };\n  // 완료버튼 누르면 정보를 데이터베이스에 보내주는 함수\n  function onSubmit() {\n    saveInfo(personInfo);\n    saveFile(files);\n    // 원하는 시간만 보내기 위한 변수들\n    const time = new Date().toISOString();\n    const date = time.slice(0, 10);\n    onHandleData({\n      Patient_cd: personInfo.Patient_cd,\n      Patient_nm: personInfo.Patient_nm,\n      Meet_dt: date,\n      Region: personInfo.Region,\n      Hospital: personInfo.Hospital,\n      Participants: personInfo.Participants,\n      Memo: personInfo.Memo,\n    });\n  }\n  // 로그아웃 함수\n  function onLogOut() {\n    navigate(`/`);\n  }\n\n  return (\n    <div className=\"register\">\n      <header className=\"register-header\">\n        <h1 className=\"register-header-title\">Patient Registration</h1>\n        <Link className=\"register-header-link\" to={`/PatientListD`}>\n          <div className=\"register-header-back\">Back</div>\n        </Link>\n        <Link className=\"register-header-link\" to={`/PatientListD`} onClick={onSubmit}>\n          <div className=\"register-header-complete\">Complete</div>\n        </Link>\n        <div className=\"patient-list-header-user\">\n          <div className=\"patient-list-header-user-logout\" onClick={onLogOut}></div>\n          <HeaderUser />\n        </div>\n      </header>\n\n      <main className=\"register-content\">\n        <header className=\"register-content-header\">\n          <input className=\"register-content-header-name\" placeholder=\"New Patient Name\" onChange={onPatientNM}/>\n          <input className=\"register-content-header-name\" placeholder=\"ID Number\" onChange={onPatientCD}/>\n        </header>\n        <div className=\"register-content-section\">\n          <div className=\"register-content-section-left\">\n            <section className=\"register-content-id\">\n              <h2 className=\"register-content-id-title\">ID</h2>\n              <div className=\"register-content-id-box\">\n                <div className=\"register-content-id-box-item\" onChange={onText}>\n                  <div className=\"register-content-id-box-item-title\">\n                    Region\n                  </div>\n                  <input className=\"register-content-id-box-item-text\"/>\n                </div>\n                <div className=\"register-content-id-box-item\" onChange={onText}>\n                  <div className=\"register-content-id-box-item-title\">\n                    Hospital\n                  </div>\n                  <input className=\"register-content-id-box-item-text\"/>\n                </div>\n                <div className=\"register-content-id-box-item\" onChange={onText}>\n                  <div className=\"register-content-id-box-item-title\">\n                    Sex\n                  </div>\n                  <div className=\"register-content-id-box-item-text\">\n                    {gender.map((sex) => (\n                      <div key={sex.value} className=\"register-content-id-box-item-form\" onClick={onContent}>{sex.name}</div>\n                    ))} \n                  </div>\n                </div>\n                <div className=\"register-content-id-box-item\" onChange={onText}>\n                  <div className=\"register-content-id-box-item-title\">\n                    Age\n                  </div>\n                  <input className=\"register-content-id-box-item-text\"/>\n                </div>\n                <div className=\"register-content-id-box-item\" onChange={onText}>\n                  <div className=\"register-content-id-box-item-title\">\n                    Birth_dt\n                  </div>\n                  <input type=\"date\" className=\"register-content-id-box-item-text\"/>\n                </div>\n                <div className=\"register-content-id-box-item\" onChange={onText}>\n                  <div className=\"register-content-id-box-item-title\">\n                    Height\n                  </div>\n                  <input className=\"register-content-id-box-item-text\"/>\n                </div>\n                <div className=\"register-content-id-box-item\" onChange={onText}>\n                  <div className=\"register-content-id-box-item-title\">\n                    Weight\n                  </div>\n                  <input className=\"register-content-id-box-item-text\"/>\n                </div>\n                <div className=\"register-content-id-box-item\" onChange={onText}>\n                  <div className=\"register-content-id-box-item-title-last\">\n                    Participants\n                  </div>\n                  <input className=\"register-content-id-box-item-text\"/>\n                </div>\n              </div>\n            </section>\n            <section className=\"register-content-memo\">\n              <h2 className=\"register-content-memo-title\">Memo</h2>\n              <textarea\n                className=\"register-content-memo-box\"\n                onChange={onMemo}\n              ></textarea>\n            </section>\n            <section className=\"register-content-file\">\n              <h2 className=\"register-content-file-title\">Files</h2>\n              <div className=\"register-content-file-box\">\n                <label htmlFor=\"file\">\n                  <div className=\"register-content-file-box-submit\"></div>\n                </label>\n                <input type=\"file\" id=\"file\" className=\"register-content-file-box-item\" accept='.DCM' onChange={onSelectFile} ref={fileInputRef}/>\n                {files.map((file, index) => (\n                  <div key={index} className=\"register-content-file-box-file\">\n                    <h3 className=\"register-content-file-box-file-title\">{file.name}</h3>\n                    <div className=\"register-content-file-box-file-delete\" onClick={onFileDelete}></div>\n                  </div>\n                ))}\n              </div>\n            </section>\n          </div>\n          <section className=\"register-content-section-right\">\n            <h2 className=\"register-content-chat\">chat</h2>\n            <div className=\"register-content-chat-box\"></div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default Register;\n"],"names":["_jsxs","className","children","_jsx","_ref","value","onHandleData","navigate","useNavigate","personInfo","setPersonInfo","useState","Patient_nm","Patient_cd","Region","Hospital","Sex","Age","Birth_dt","Height","Weight","Participants","Memo","files","setFiles","fileInputRef","useRef","onText","e","title","target","parentElement","innerText","Number","history","childArray","onContent","textContent","child","i","style","backgroundColor","onFileDelete","newFiles","filter","file","name","current","Link","to","onClick","async","response","fetch","method","headers","body","JSON","stringify","ok","Error","res","json","success","alert","msg","err","console","error","saveInfo","formData","FormData","length","append","header","charset","saveFile","date","Date","toISOString","slice","Meet_dt","HeaderUser","placeholder","onChange","map","sex","type","htmlFor","id","accept","check","ref","index"],"sourceRoot":""}