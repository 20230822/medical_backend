{"version":3,"file":"static/js/197.6fadab30.chunk.js","mappings":"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","sources":["components/backgroundLogo.js","components/headerUser.js","routes/PatientListT.js"],"sourcesContent":["import \"../style/backgroundLogo.css\";\r\n\r\nfunction BackgroundLogo() {\r\n\r\n  return (\r\n    <div className=\"background\"></div>\r\n  );\r\n}\r\n\r\nexport default BackgroundLogo;","import \"../style/headerUser.css\";\r\n\r\nfunction HeaderUser() {\r\n  \r\n  return (\r\n    <div className=\"header-user\">\r\n      <span className=\"header-user-name\">name</span>\r\n      <span className=\"header-user-icon\"></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderUser;\r\n","import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../style/PatientList.css\";\nimport HeaderUser from \"../components/headerUser\";\nimport BackgroundLogo from \"../components/backgroundLogo\";\n\nfunction PatientListD() {\n  const navigate = useNavigate();\n  const navItem = [\"Number\", \"Name\", \"City\", \"Hospital Name\", \"Doctors\", \"Go Live Chat\"];\n  // 환자 개인정보 변수\n  const [info, setInfo] = useState([]);\n\n  let history = \"\"; // 클릭한 값의 아이디저장 변수\n  let childArray = []; // child의 배열인식을 위한 새로운 변수에 저장 용도\n\n  // 한번 클릭시 색상변경 및 같은 요소 두번 클릭 시 페이지 이동 \n  function onClick(e) {\n    // 처음 누른 값의 배경색 넣어주는 문\n    if (history === \"\") {\n      e.target.parentElement.style.backgroundColor = \"#DEEFFF\";\n      history = e.target.parentElement.id;\n    } \n    // 한번 누른 요소를 한번 더 클릭 한 것이 아닌 다른 요소를 클릭할 경우 전체 색을 리셋하고 누른 요소만 배경색 설정\n    else if (history !==  e.target.parentElement.id) {\n      const child = e.target.parentElement.parentElement.children;\n      for (let i = 0; i < info.length; i++) {\n        childArray[i] = child[i + 1];\n        childArray[i].style.backgroundColor = \"\";\n      }\n      e.target.parentElement.style.backgroundColor = \"#DEEFFF\";\n      history = e.target.parentElement.id;\n    } \n    // history와 같은 요소를 한번 더 누를 경우 페이지 이동\n    else {\n      navigate(`/VideoChatting`, {\n        state: { id: history},\n      });\n    }\n  }\n\n  // 페이지 렌더시 한번만 요청\n  useEffect(() => {\n    // 정보 저장하는 함수\n    async function saveInfo() {\n      try{\n        const response = await fetch('/api/patient', {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(),\n        });\n        // 연결 성공 유무 판단\n        if (response.ok) {\n          const res = await response.json();\n          if (res.success) {\n            // 데이터 저장\n            res.data.map((patient) => {\n              const time = patient.Meet_dt;\n              const date = time.slice(0, 10); // 뒤의 시간부분은 자르는 변수\n              return (\n                setInfo((pre) => [\n                  ...pre,\n                  {\n                  Patient_cd: patient.Patient_cd,\n                  Patient_nm: patient.Patient_nm,\n                  Meet_dt: date,\n                  Region: patient.Region,\n                  Hospital: patient.Hospital,\n                  Participants: patient.Participants,\n                  }\n                ])\n              )\n            })\n          } else {\n            alert(res.msg);\n          }\n        } else {\n          throw Error(\"서버 응답 실패\");\n        }\n      } catch (err) {\n        console.error((err.message));\n      }\n    };\n\n    saveInfo();\n  }, [])\n  \n  // 로그아웃 함수\n  function onLogOut() {\n    navigate(`/`);\n  }\n\n  return (\n    <div className=\"patient-list\">\n      <BackgroundLogo />\n\n      <header className=\"patient-list-header\">\n        <h1 className=\"patient-list-header-title\">Patient List</h1>\n        <div className=\"patient-list-header-user\">\n          <div className=\"patient-list-header-user-logout\" onClick={onLogOut}></div>\n          <HeaderUser />\n        </div>\n      </header>\n\n      <article className=\"patient-list-content\">\n        <header className=\"patient-list-content-title\">\n          {navItem.map((title) => <h3 className=\"patient-list-content-title-item\" key={title}>{title}</h3>)}\n        </header>\n    \n        {info.map((patient) => (\n          <ol className=\"patient-list-content-ol\" key={patient.Patient_cd} id={patient.Patient_cd} onClick={onClick}>\n            <li className=\"patient-list-content-ol-item\">{patient.Patient_cd}</li>\n            <li className=\"patient-list-content-ol-item\">{patient.Patient_nm}</li>\n            <li className=\"patient-list-content-ol-item\">{patient.Region}</li>\n            <li className=\"patient-list-content-ol-item\">{patient.Hospital}</li>\n            <li className=\"patient-list-content-ol-item\">{patient.Participants}</li>\n            <li className=\"patient-list-content-ol-item active\">회의참여</li>\n          </ol>\n          )\n        )}\n      </article>\n    </div>\n  );\n}\n\nexport default PatientListD;"],"names":["_jsx","className","_jsxs","children","navigate","useNavigate","info","setInfo","useState","history","childArray","onClick","e","target","parentElement","style","backgroundColor","id","child","i","length","state","useEffect","async","response","fetch","method","headers","body","JSON","stringify","ok","Error","res","json","success","data","map","patient","date","Meet_dt","slice","pre","Patient_cd","Patient_nm","Region","Hospital","Participants","alert","msg","err","console","error","message","saveInfo","BackgroundLogo","HeaderUser","title"],"sourceRoot":""}